# GitHub Action for generating a contribution graph with a snake eating your contributions.

name: Generate Snake

# Controls when the action will run. This action runs every 6 hours.

on:
  schedule:
      # every 6 hours
    - cron: "0 */6 * * *"

# This command allows us to run the Action automatically from the Actions tab.
  workflow_dispatch:

# The sequence of runs in this workflow:
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - uses: actions/checkout@v2

    # Generates the snake  
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: mishmanners
          # these next 2 lines generate the files on a branch called "output". This keeps the main branch from cluttering up.
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

     # show the status of the build. Makes it easier for debugging (if there's any issues).
      - run: git status

      # Push the changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true

      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
Step 3. Running GitHub Actions
Once you've added the code above and committed it, head to your Actions tab. Under "Workflows", you should see the "Generate Snake" Action you created above.

Workflow

Click "Run Workflow" and watch your workflow run. You can even expand your workflow and see what's happening in real time.

Running Actions

Once your workflow has finished running, you should have received a green ‚úÖ "build" checkmark. If so, this means your Action is working nicely. If not, you'll have to go through the code and see where the errors are. The "build" status should give you some indication of where your errors lie. You can also compare it with the yaml file on my GitHub Profile README.

Build green

If you have the green "build" ‚úÖ then you should be good to go. Head back to your repo's "Code" directory, and change your branch to "output". Here you'll find the two versions of your contribution graph with the snake eating it: a *.gif and a *.svg. The good thing about these files is the file is rewritten over itself every time the Action runs. Thus, your contribution graph will always be up to date.

CodeOutput

Step 4. Adding a contribution-eating snake to your profile
Now the final set is to add this to your profile. Grab the file location of your *.gif. It should be something like:

https://github.com/YOUR_USERNAME/YOUR_USERNAME/blob/output/github-contribution-grid-snake.gif

Add this to your profile by copying the file location onto a new line in your markdown file:

![snake gif](https://github.com/YOUR_USERNAME/YOUR_USERNAME/blob/output/github-contribution-grid-snake.gif)

Now you should have a really cool looking snake eating your contributions!

SnakeEating

Hopefully this guide was helpful for you and gives you a good base to start building and adding more Actions on your profile. What have you been adding to your GitHub Profile README? Other there other cool Actions I should be looking at?

GitHub Like a Boss (11 Part Series)
1
GitHub Readme for easy to understand code
2
Using the GitHub CLI to update your repo
...
7 more parts...
10
How to build HTML-like forms with GitHub
11
How to use GitHub Pages to host your website, even with multiple repos
Discussion (8)
Subscribe
pic
Add to the discussion
 
msoftware profile image
Michael jentsch
‚Ä¢
Jul 9

Great tutorial! Works for me.
Here's mine - github.com/msoftware


2
 likes
Reply
 
gustavohgmartins profile image
Gustavo Martins
‚Ä¢
Sep 3

Awsome! How did you change the background-color?


Like
Reply
 
mishmanners profile image
Michelle Mannering 
‚Ä¢
Sep 3

I didn't change the background colour. It's a .png/.svg image, meaning the background is transparent. It looks dark on mine because I have dark mode enabled on GitHub. You can enable it by clicking Settings --> Appearance --> choosing your mode.


1
 like
Thread
gustavohgmartins profile image
Gustavo Martins
‚Ä¢
Sep 3

Thank you! actually I was using the .gif version, so I switched to the .svg one and voil√°


2
 likes
Thread
mishmanners profile image
Michelle Mannering 
‚Ä¢
Sep 3

Awesome! Glad to be of help üòÑ


1
 like
Reply
 
shasank27 profile image
Shasank Periwal
‚Ä¢
Aug 8 ‚Ä¢ Edited on Aug 8

Great tutorial!
But can anyone help me, its not showing all my contributions
github.com/shasank27/shasank27


1
 like
Reply
 
mishmanners profile image
Michelle Mannering 
‚Ä¢
Sep 6 ‚Ä¢ Edited on Sep 6

Hey Shasank. I can't see it on your profile, but to show all contributions, you need to make sure all contributions are turned on your profile. You can do this in your settings:

github.com/YOUR_PROFILE --> Settings --> Profile

Then scroll down to "Contributions" and check the box that says "Include private contributions on my profile".

Hope that helps.


1
 like
Reply
 
adityamangal1 profile image
Aditya Mangal
‚Ä¢
Jul 22

Awesome Tutorial! üêç


Like
Reply
Code of Conduct ‚Ä¢ Report abuse
Read next
sohandutta profile image
Make everyone in your project write beautiful commit messages using commitlint and commitizen üöÄ
Sohan Dutta - Sep 2

marimasakdunia profile image
Cara Membuat Bakso Ikan Cod dan Kentang dari Makanan Spesial
Writing & Cooking - Aug 19

pat_the99 profile image
Java Interfaces
Patricia Nicole - Aug 24

conorbronsdon profile image
Co-Founding Kubernetes with Microsoft CVP Brendan Burns
Conor Bronsdon - Sep 1


Michelle Mannering
Follow
Developer Relations | Hackathon Queen | Community Manager
LOCATION
Australia
WORK
Developer Community Manager at GitHub
JOINED
May 29, 2020
More from Michelle Mannering
How to add a social media share card to any website
#tutorial #webdev
Did you know, GitHub has a mobile app?!
#github #mobile #productivity
How to use GitHub Pages to host your website, even with multiple repos
#github #tutorial #webdev

# GitHub Action for generating a contribution graph with a snake eating your contributions.

name: Generate Snake

# Controls when the action will run. This action runs every 6 hours.

on:
  schedule:
      # every 6 hours
    - cron: "0 */6 * * *"

# This command allows us to run the Action automatically from the Actions tab.
  workflow_dispatch:

# The sequence of runs in this workflow:
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - uses: actions/checkout@v2

    # Generates the snake  
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: mishmanners
          # these next 2 lines generate the files on a branch called "output". This keeps the main branch from cluttering up.
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

     # show the status of the build. Makes it easier for debugging (if there's any issues).
      - run: git status

      # Push the changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true

      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}